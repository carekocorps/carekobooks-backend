name: CI

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  code_quality:
    runs-on: ubuntu-latest
    environment: carekenvironment
    steps:
      - name: checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: jdk setup
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 21
          cache: maven

      - name: sonarqube package cache
        uses: actions/cache@v4
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: maven cache
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: sonarqube
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
        run: |
          mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar \
            -Dsonar.projectKey=carekobooks-backend \
            -DskipTests=true

  deploy:
    runs-on: self-hosted
    needs: code_quality
    environment: carekenvironment
    steps:
      - name: checkout
        uses: actions/checkout@v4

      - name: deploy
        env:
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
          EMAIL_USERNAME: ${{ secrets.EMAIL_USERNAME }}
          EMAIL_PASSWORD: ${{ secrets.EMAIL_PASSWORD }}
          GOOGLE_CLIENT_ID: ${{ secrets.GOOGLE_CLIENT_ID }}
          GOOGLE_CLIENT_SECRET: ${{ secrets.GOOGLE_CLIENT_SECRET }}
          CORS_ORIGIN: ${{ secrets.CORS_ORIGIN }}
          MINIO_OUTER_ENDPOINT: ${{ secrets.MINIO_OUTER_ENDPOINT }}
          MINIO_ACCESS_KEY: ${{ secrets.MINIO_ACCESS_KEY }}
          MINIO_SECRET_KEY: ${{ secrets.MINIO_SECRET_KEY }}
          MINIO_BUCKET: ${{ secrets.MINIO_BUCKET }}
        working-directory: docker
        run: docker compose -f docker-compose.staging.yml up -d --no-deps --build backend
