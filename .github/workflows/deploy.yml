name: deploy

on:
  push:
    branches:
      - main
  workflow_dispatch:

env:
  DB_NAME: ${{ secrets.DB_NAME }}
  DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
  EMAIL_USERNAME: ${{ secrets.EMAIL_USERNAME }}
  EMAIL_PASSWORD: ${{ secrets.EMAIL_PASSWORD }}
  GOOGLE_CLIENT_ID: ${{ secrets.GOOGLE_CLIENT_ID }}
  GOOGLE_CLIENT_SECRET: ${{ secrets.GOOGLE_CLIENT_SECRET }}
  MINIO_OUTER_ENDPOINT: ${{ secrets.MINIO_OUTER_ENDPOINT }}
  MINIO_ACCESS_KEY: ${{ secrets.MINIO_ACCESS_KEY }}
  MINIO_SECRET_KEY: ${{ secrets.MINIO_SECRET_KEY }}
  MINIO_BUCKET: ${{ secrets.MINIO_BUCKET }}
  SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
  SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
  SONAR_JDBC_PASSWORD: ${{ secrets.SONAR_JDBC_PASSWORD }}

jobs:
  build:
    runs-on: self-hosted
    steps:
      - name: checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: build
        run: |
          docker compose stop backend
          docker compose rm -f backend
          docker compose build backend --no-cache

  analyze:
    runs-on: self-hosted
    needs: build
    steps:
      - name: sonarqube
        run: |
          docker run --rm \
            -v "$(pwd)":/app \
            -v "$HOME/.m2":/root/.m2 \
            -w /app \
            maven:3.9-eclipse-temurin-21 \
            mvn verify sonar:sonar \
              -Dsonar.projectKey=carekobooks-backend \
              -Dsonar.host.url=${SONAR_HOST_URL} \
              -Dsonar.login=${SONAR_TOKEN} \
              -DskipTests=true

  deploy:
    runs-on: self-hosted
    needs: analyze
    steps:
      - name: keygen
        run: bash keygen.sh

      - name: environment
        run: |
          mkdir -p .secrets
          cat <<EOF > .secrets/.env
          DB_NAME=${DB_NAME}
          DB_PASSWORD=${DB_PASSWORD}
          EMAIL_USERNAME=${EMAIL_USERNAME}
          EMAIL_PASSWORD=${EMAIL_PASSWORD}
          GOOGLE_CLIENT_ID=${GOOGLE_CLIENT_ID}
          GOOGLE_CLIENT_SECRET=${GOOGLE_CLIENT_SECRET}
          MINIO_OUTER_ENDPOINT=${MINIO_OUTER_ENDPOINT}
          MINIO_ACCESS_KEY=${MINIO_ACCESS_KEY}
          MINIO_SECRET_KEY=${MINIO_SECRET_KEY}
          MINIO_BUCKET=${MINIO_BUCKET}
          EOF

      - name: deploy
        run: docker compose up --env-file .env -d --no-deps backend
